<%= form_with(model: inspection,
              local: true,
              builder: CustomFormBuilder,
              class: "space-y-4 max-w-md mx-auto bg-gray-900 text-white p-6 rounded-lg shadow-md") do |form| %>
  <% if @inspection.errors.any? %>
    <% error_messages = @inspection.errors.full_messages.uniq.map { |msg| "<li>#{msg}</li>" }.join %>
    <%= javascript_tag do %>
      Swal.fire({
      icon: 'error',
      title: 'Errores encontrados',
      html: '<ul style="text-align: left;">' + '<%= raw error_messages %>' + '</ul>',
      confirmButtonText: 'Entendido'
      })
    <% end %>
  <% end %>

  <div class="mt-3">
    <%= form.label :number, "Número de inspección.", class: "block text-gray-300" %>
    <%= form.number_field :number, min: 1,
                          class: "mt-1 block w-full px-3 py-2 bg-gray-700 text-white border border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm" %>
  </div>

  <% if @manual_action_name == 'new' %>
    <div>
      <%= form.label :group_id, "Clasificación del ascensor", class: "block text-gray-300" %>
      <%= form.select :group_id,
                      options_for_select([['Seleccione un grupo', 'bad']] + Group.all.map { |g| [g.name, g.id] }, selected: @item&.group_id),
                      {},
                      class: "mt-1 block w-full px-3 py-2 bg-gray-700 text-white border border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm" %>
    </div>

    <div class="mt-3">
      <%= form.label :rerun, "Marcar si es que es reinspección (se le hizo una inspección hace 3 meses).", class: "block text-gray-300" %>
      <%= form.check_box :rerun, class: "mt-1 bg-gray-700 border-gray-600 rounded-md focus:ring-blue-500 focus:border-blue-500 text-blue-600" %>
    </div>

    <div data-controller="principal-select">
      <div>
        <%= form.label :principal_id, "Empresa cliente", class: "block text-gray-300" %>
        <%= form.collection_select :principal_id,
                                   Principal.all,
                                   :id,
                                   :name,
                                   { prompt: 'Selecciona una empresa' },
                                   { class: "mt-1 block w-full px-3 py-2 bg-gray-700 text-gray-700 border border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm",
                                     data: { controller: 'slim', principal_select_target: "principal", action: "change->principal-select#updateItems" },
                                     selected: @item&.principal_id } %>
      </div>

      <div class="mt-3">
        <%= form.label :identificador, "Identificador", class: "block text-gray-300" %>
        <%= form.text_field :identificador,
                            value: @item&.identificador,
                            list: "identificador-options",
                            maxlength: 100,
                            class: "block w-full px-3 py-2 bg-gray-700 text-white border border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm" %>
        <p id="floating_helper_text" class="mt-2 text-xs text-gray-400">Dejar en blanco si no se conoce</p>
        <datalist id="identificador-options" data-principal-select-target="identificadorList"></datalist>
      </div>
    </div>
  <% elsif @manual_action_name == 'new_with_last' %>
    <div class="mt-3">
      <%= form.label :identificador, "Identificador", class: "block text-gray-300" %>
      <%= form.text_field :identificador,
                          value: @item.identificador,
                          maxlength: 100,
                          class: "block w-full px-3 py-2 bg-gray-700 text-white border border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm",
                          readonly: true %>

      <div class="mt-3">
        <%= form.label :rerun, "Marcar si es que es reinspección (se le hizo una inspección hace 3 meses).", class: "block text-gray-300" %>
        <%= form.check_box :rerun, class: "mt-1 bg-gray-700 border-gray-600 rounded-md focus:ring-blue-500 focus:border-blue-500 text-blue-600" %>
      </div>

      <%= form.hidden_field :group_id, value: @item.group.id %>
      <%= form.hidden_field :principal_id, value: @item.principal.id %>
    </div>
  <% end %>

  <div class="mt-3">
    <%= form.label :name, "Puedes ingresar un nombre para identificar la inspección.", class: "block text-gray-300" %>
    <%= form.text_field :name, class: "mt-1 block w-full px-3 py-2 bg-gray-700 text-white border border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm" %>
  </div>

  <%= form.hidden_field :place, id: "inspection_place" %>

  <div class="mt-3">
    <%= form.label :region, "Región", class: "block text-gray-300" %>
    <%= form.select :region,
                    options_for_select(communes_by_region.keys, selected: @inspection.region),
                    { prompt: "Selecciona Región" },
                    { class: "mt-1 block w-full px-3 py-2 bg-gray-700 text-white border border-gray-600 rounded-md",
                      id: "inspection_region",
                      data: { controller: "slim-select" },
                      required: true
                    } %>
  </div>

  <div class="mt-3">
    <%= form.label :comuna, "Comuna", class: "block text-gray-300" %>
    <%= form.select :comuna,
                    options_for_select(communes_by_region[@inspection.region] || [], selected: @inspection.comuna),
                    { prompt: "Selecciona Comuna" },
                    { class: "mt-1 block w-full px-3 py-2 bg-gray-700 text-white border border-gray-600 rounded-md",
                      id: "inspection_comuna",
                      data: { controller: "slim-select" },
                      required: true
                    } %>
  </div>
  <% calle_value = if @inspection.place.present?
                     @inspection.place.rpartition(",").first.strip
                   else
                     ""
                   end %>
  <div class="mt-3">
    <%= form.label :calle, "Calle", class: "block text-gray-300" %>
    <%= form.text_field :calle, value: calle_value,
                        class: "mt-1 block w-full px-3 py-2 bg-gray-700 text-white border border-gray-600 rounded-md",
                        id: "inspection_calle",
                        required: true %>
  </div>

  <div class="mt-3">
    <%= form.label :ins_date, "Fecha de inspección", class: "block text-gray-300" %>
    <%= form.date_field :ins_date,
                        class: "mt-1 block w-full px-3 py-2 bg-gray-700 text-white border border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm" %>
  </div>

  <div class="mt-3">
    <%= form.label :validation, "Periodicidad", class: "block text-gray-300" %>
    <%= form.select :validation,
                    options_for_select([['1 año', 1], ['2 años', 2]], @inspection.validation),
                    {},
                    class: "mt-1 block w-full px-3 py-2 bg-gray-700 text-white border border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm" %>
  </div>

  <% if Current.user.admin || Current.user.crear %>
    <div class="mt-3">
      <%= form.label :user_ids, "Inspectores asignados", class: "block text-gray-300" %>
      <%= form.collection_select :user_ids,
                                 User.admin_false_o_inspeccionar,
                                 :id,
                                 :real_name,
                                 {},
                                 { multiple: true,
                                   size: 2,
                                   class: "mt-1 block w-full px-3 py-2 bg-gray-700 text-gray-700 border border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm",
                                   data: { controller: 'slim' } } %>
    </div>
  <% end %>

  <%= form.hidden_field :facturacion_id, id: "inspection_facturacion_id" %>

  <div class="mt-6">
    <%= form.label :facturacion_id, "Cotización Seleccionada", class: "block text-gray-300 text-2xl" %>
    <div class="flex items-center gap-2 mt-2">
      <span id="facturacion_selected_display" class="text-gray-200">
        <% if @inspection.facturacion&.number.present? %>
          <%= "Cotización N° #{@inspection.facturacion.number}. #{@inspection.facturacion.name}" %>
        <% else %>
          Ninguna seleccionada
        <% end %>
      </span>

      <button type="button"
              onclick="openFacturacionModal()"
              class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-2 rounded ml-4">
        Buscar Cotización
      </button>
    </div>
  </div>

  <%= form.hidden_field :manual_action_name, value: @manual_action_name %>

  <div class="mt-6 py-5">
    <%= form.submit("#{inspection.new_record? ? 'Crear' : 'Actualizar'} Inspección",
                    class: "w-full bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline cursor-pointer") %>
  </div>
<% end %>
<div id="facturacionModal"
     class="hidden fixed inset-0 bg-black bg-opacity-70 z-50 flex items-center justify-center"
     onclick="closeWhenClickOutside(event)">
  <div class="modal-content relative w-11/12 max-w-8xl bg-gray-800 p-6 rounded shadow-md"
       style="overflow-y:auto;min-height:600px;max-height:85vh;"
       onclick="event.stopPropagation()">
    <button type="button"
            class="absolute top-4 right-4 text-white text-2xl font-bold"
            onclick="closeFacturacionModal()">&times;</button>

    <turbo-frame id="facturacions_frame" src="<%= facturacions_path %>">
      Cargando Cotizaciones...
    </turbo-frame>
  </div>
</div>

<style>
    #facturacions-table         { border-collapse:collapse; }
    #facturacions-table tbody tr{ border-bottom:1px solid rgba(255,255,255,.20); }
</style>

<script>
    if (!window.__facturacionGlobal__) {
        window.__facturacionGlobal__   = true
        window.facturacionsDt          = null
        window.facturacionClickHandler = null
        window.facturacionsPrepared    = false
    }

    window.openFacturacionModal = function () {
        document.getElementById('facturacionModal').classList.remove('hidden')
        document.body.classList.add('overflow-hidden')
    }
    window.closeFacturacionModal = function () {
        document.getElementById('facturacionModal').classList.add('hidden')
        document.body.classList.remove('overflow-hidden')
    }
    window.closeWhenClickOutside = e => { if (e.target.id === 'facturacionModal') window.closeFacturacionModal() }
    window.onSelectFacturacion = function (fid, fnum, fname) {
        const hidden = document.getElementById('inspection_facturacion_id')
        const span   = document.getElementById('facturacion_selected_display')
        if (hidden) hidden.value = fid
        if (span)   span.textContent = `Facturación N° ${fnum}. ${fname}`
        window.closeFacturacionModal()
    }

    function addSelectColumn(tableEl) {
        if ([...tableEl.querySelectorAll('thead th')].some(th => th.textContent.trim() === 'Seleccionar')) return
        const theadRow = tableEl.querySelector('thead tr')
        tableEl.querySelectorAll('thead th:nth-last-child(-n+2), tbody td:nth-last-child(-n+2)').forEach(n => n.remove())

        const newTh = document.createElement('th')
        newTh.className  = 'px-6 py-3 text-left text-xs font-medium uppercase tracking-wider'
        newTh.textContent = 'Seleccionar'
        theadRow.appendChild(newTh)

        tableEl.querySelectorAll('tbody tr').forEach(row => {
            const cells = row.querySelectorAll('td')
            let fid=null, fnum=null, fname=''
            const link = cells[0]?.querySelector('a')
            if (link) {
                const m = (link.getAttribute('href')||'').match(/cotizaciones\/(\d+)/)
                if (m) { fid = m[1]; fnum = link.textContent.trim() }
            }
            fname = cells[1]?.textContent.trim() || ''

            const td = document.createElement('td')
            td.className = 'px-6 py-4 whitespace-normal'
            if (fid && fnum) {
                const b = document.createElement('button')
                b.type  = 'button'
                b.className = 'seleccionar-facturacion bg-green-600 hover:bg-green-700 text-white font-bold py-1 px-3 rounded'
                b.textContent = 'Seleccionar'
                b.dataset.facturacionId     = fid
                b.dataset.facturacionNumber = fnum
                b.dataset.facturacionName   = fname
                td.appendChild(b)
            } else td.textContent = '—'
            row.appendChild(td)
        })
        window.facturacionsPrepared = true
    }

    function initDataTable() {
        const t = document.getElementById('facturacions-table')
        if (!t || window.facturacionsDt) return

        window.facturacionsDt = new simpleDatatables.DataTable(t,{
            columns:[
                {select:2,searchable:false},
                {select:3,searchable:false},
                {select:4,searchable:false},
                {select:6,searchable:false},
                {select:7,searchable:false},
                {select:8,searchable:false}
            ],
            labels :{
                placeholder:'Buscar…', perPage:'Registros por pág.', noRows:'No hay datos',
                noResults:'Sin coincidencias', info:'Mostrando {start} a {end} de {rows}'
            },
            tableRender: (_d, table, type) => {

                if (type !== 'main') return table


                const head = table?.childNodes?.[0]
                if (!head || !head.childNodes?.length) return table

                head.childNodes.forEach(row => {
                    row.attributes ||= {}
                    row.attributes.class = (row.attributes.class || '') + ' bg-gray-800 text-white'

                    row.childNodes.forEach(th => {
                        th.attributes ||= {}
                        th.attributes.class = (th.attributes.class || '') + ' bg-gray-800 text-white'
                    })
                })


                const first  = head.childNodes[0]
                const noF    = [2, 3, 4, 6, 7, 8]
                const filter = {
                    nodeName:   'TR',
                    attributes: { class: 'search-filtering-row bg-gray-800 text-white' },
                    childNodes: []
                }

                first.childNodes.forEach((_, i) => {
                    const disabled = noF.includes(i)

                    const inputAttrs = {
                        class: `datatable-input text-white placeholder-gray-400 bg-gray-700 border-gray-600 w-full${disabled ? ' cursor-not-allowed opacity-50' : ''}`,
                        type:  'search',
                        placeholder: disabled ? 'Sin filtro' : 'Filtrar'
                    }
                    if (!disabled) inputAttrs['data-columns'] = `[${i}]`
                    else           inputAttrs.disabled = 'disabled'

                    filter.childNodes.push({
                        nodeName:   'TH',
                        attributes: { style: 'padding-top:1rem;' },
                        childNodes: [{ nodeName: 'INPUT', attributes: inputAttrs }]
                    })
                })

                head.childNodes.push(filter)
                return table
            }


        })

        if (!window.facturacionClickHandler) {
            window.facturacionClickHandler = ev=>{
                if (ev.target.matches('button.seleccionar-facturacion')) {
                    const d = ev.target.dataset
                    window.onSelectFacturacion(d.facturacionId,d.facturacionNumber,d.facturacionName)
                }
            }
        }
        t.addEventListener('click', window.facturacionClickHandler)
    }

    function initFlatpickrFilters() {
        const start = document.querySelector('[data-date-filter-target="startDate"]')
        const end   = document.querySelector('[data-date-filter-target="endDate"]')
        const btn   = document.querySelector('[data-date-filter-target="submitButton"]')
        if (!btn) return

        const clear = () => fp => ({ onReady() {
                const c=document.createElement('button')
                c.type='button'; c.textContent='Quitar fecha'
                c.className='flatpickr-clear-btn'
                c.addEventListener('click',()=>{fp.clear();fp.close()})
                fp.calendarContainer.appendChild(c)
            } })

        if (start && !start._flatpickr)
            flatpickr(start,{dateFormat:'d-m-Y',locale:'es',onChange:()=>btn.click(),plugins:[clear()]})
        if (end   && !end  ._flatpickr)
            flatpickr(end  ,{dateFormat:'d-m-Y',locale:'es',onChange:()=>btn.click(),plugins:[clear()]})
    }

    document.addEventListener('turbo:before-frame-render', e=>{
        if (e.target.id !== 'facturacions_frame') return

        const oldTable = e.target.querySelector('#facturacions-table')
        if (oldTable && window.facturacionClickHandler)
            oldTable.removeEventListener('click', window.facturacionClickHandler)
        if (window.facturacionsDt) { window.facturacionsDt.destroy(); window.facturacionsDt=null }

        e.target.querySelectorAll('[data-date-filter-target="startDate"],[data-date-filter-target="endDate"]')
          .forEach(el=>{ if(el._flatpickr) el._flatpickr.destroy() })

        window.facturacionsPrepared = false
    })

    document.addEventListener('turbo:before-cache',()=>{
        if (window.facturacionsDt){ window.facturacionsDt.destroy(); window.facturacionsDt=null }
        const t=document.getElementById('facturacions-table')
        if (t && window.facturacionClickHandler) t.removeEventListener('click',window.facturacionClickHandler)
        document.querySelectorAll('[data-date-filter-target="startDate"],[data-date-filter-target="endDate"]')
          .forEach(el=>{ if(el._flatpickr) el._flatpickr.destroy() })
    })

    function setupFacturacionComponents(){
        const table=document.getElementById('facturacions-table')
        if(table){
            if(!window.facturacionsPrepared) addSelectColumn(table)
            initDataTable()
            table.querySelectorAll('a').forEach(a=>a.target='_blank')
        }
        initFlatpickrFilters()
    }
    document.addEventListener('turbo:frame-load',e=>{ if(e.target.id==='facturacions_frame') setupFacturacionComponents() })
    document.addEventListener('turbo:render',      setupFacturacionComponents)

    document.addEventListener('keydown',e=>{ if(e.key==='Escape') window.closeFacturacionModal() })
</script>


<script>
    document.addEventListener("turbo:load", () => {
        const places = <%= communes_by_region.to_json.html_safe %>
        const regionSelect = document.getElementById("inspection_region")
        if (!regionSelect) return
        const comunaSelect = document.getElementById("inspection_comuna")
        const calleInput = document.getElementById("inspection_calle")
        const placeHidden = document.getElementById("inspection_place")
        regionSelect.addEventListener("change", function () {
            const region = regionSelect.value
            const comunas = places[region] || []
            while (comunaSelect.firstChild) comunaSelect.removeChild(comunaSelect.firstChild)
            const defaultOption = document.createElement("option")
            defaultOption.value = ""
            defaultOption.textContent = "Selecciona Comuna"
            comunaSelect.appendChild(defaultOption)
            comunas.forEach(comuna => {
                const option = document.createElement("option")
                option.value = comuna
                option.textContent = comuna
                comunaSelect.appendChild(option)
            })
            comunaSelect.value = ""
            updatePlace()
        })
        function updatePlace() {
            const comuna = comunaSelect.value
            const calle = calleInput.value
            placeHidden.value = comuna ? `${calle}, ${comuna}` : calle
        }
        comunaSelect.addEventListener("change", updatePlace)
        calleInput.addEventListener("input", updatePlace)
    })
</script>
